version: "3"

services:
  teslamate:
    image: teslamate/teslamate:latest
    container_name: teslamate
    restart: always
    networks:
      - proxy
    depends_on:
      - database
    environment:
      - DATABASE_USER=${TM_DB_USER}
      - DATABASE_PASS=${TM_DB_PASS}
      - DATABASE_NAME=teslamate
      - DATABASE_HOST=tesla_db
      - MQTT_HOST=tesla_mosquitto
      - VIRTUAL_HOST=${TM_DOMAIN}
      - CHECK_ORIGIN=true
      - TZ=${TM_TZ}
    ports:
      - 4000:4000
    volumes:
      - ./import:/opt/app/import
    cap_drop:
      - all
    labels:
      - "traefik.enable=true"
      - "traefik.port=4000"
      - "traefik.http.middlewares.redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.teslamate-auth.basicauth.realm=teslamate"
      - "traefik.http.routers.teslamate-insecure.rule=Host(`${TM_DOMAIN}`)"
      - "traefik.http.routers.teslamate-insecure.middlewares=redirect"
      - "traefik.http.routers.teslamate-ws.rule=Host(`${TM_DOMAIN}`) && Path(`/live/websocket`)"
      - "traefik.http.routers.teslamate-ws.entrypoints=https"
      - "traefik.http.routers.teslamate-ws.tls"
      - "traefik.http.routers.teslamate.rule=Host(`${TM_DOMAIN}`)"
      - "traefik.http.routers.teslamate.middlewares=teslamate-auth"
      - "traefik.http.routers.teslamate.entrypoints=https"
      - "traefik.http.routers.teslamate.tls.certresolver=tmhttpchallenge"

  database:
    image: postgres:13
    container_name: tesla_db
    restart: always
    networks:
      - proxy
    environment:
      - POSTGRES_USER=${TM_DB_USER}
      - POSTGRES_PASSWORD=${TM_DB_PASS}
      - POSTGRES_DB=teslamate
    volumes:
      - ${HOME}/Data/teslamate/postgres:/var/lib/postgresql/data

  grafana:
    image: teslamate/grafana:latest
    container_name: tesla_grafana
    restart: always
    networks:
      - proxy
    user: "1000"
    environment:
      - DATABASE_USER=${TM_DB_USER}
      - DATABASE_PASS=${TM_DB_PASS}
      - DATABASE_NAME=teslamate
      - DATABASE_HOST=tesla_db
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PW}
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_SERVER_DOMAIN=${TM_DOMAIN}
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    ports:
      - 3000:3000
    volumes:
      - ${HOME}/Data/teslamate/grafana:/var/lib/grafana
    labels:
      - "traefik.enable=true"
      - "traefik.port=3000"
      - "traefik.http.middlewares.redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.grafana-insecure.rule=Host(`${TM_DOMAIN}`)"
      - "traefik.http.routers.grafana-insecure.middlewares=redirect"
      - "traefik.http.routers.grafana.rule=Host(`${TM_DOMAIN}`) && (Path(`/grafana`) || PathPrefix(`/grafana/`))"
      - "traefik.http.routers.grafana.entrypoints=https"
      - "traefik.http.routers.grafana.tls.certresolver=tmhttpchallenge"

  mosquitto:
    image: eclipse-mosquitto:2
    container_name: tesla_mosquitto
    restart: always
    networks:
      - proxy
    command: mosquitto -c /mosquitto-no-auth.conf
    ports:
      - 1883:1883
    volumes:
      - ${HOME}/Data/teslamate/mosquitto/conf:/mosquitto/config
      - ${HOME}/Data/teslamate/mosquitto/data:/mosquitto/data

networks:
  proxy:
    external: true
